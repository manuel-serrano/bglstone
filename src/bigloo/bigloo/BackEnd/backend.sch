;; ==========================================================
;; Class accessors
;; Bigloo (4.7a)
;; Inria -- Sophia Antipolis     Thu Mar 6 07:34:14 AM CET 2025 
;; (bigloo -classgen BackEnd/backend.scm)
;; ==========================================================

;; The directives
(directives

;; backend
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline backend?::bool ::obj)
    (backend-nil::backend)
    (inline backend-types::obj ::backend)
    (inline backend-types-set! ::backend ::obj)
    (inline backend-functions::obj ::backend)
    (inline backend-functions-set! ::backend ::obj)
    (inline backend-variables::obj ::backend)
    (inline backend-variables-set! ::backend ::obj)
    (inline backend-extern-types::obj ::backend)
    (inline backend-extern-types-set! ::backend ::obj)
    (inline backend-extern-functions::obj ::backend)
    (inline backend-extern-functions-set! ::backend ::obj)
    (inline backend-extern-variables::obj ::backend)
    (inline backend-extern-variables-set! ::backend ::obj)
    (inline backend-name::bstring ::backend)
    (inline backend-name-set! ::backend ::bstring)
    (inline backend-language::symbol ::backend)
    (inline backend-language-set! ::backend ::symbol))))

;; cvm
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline cvm?::bool ::obj)
    (cvm-nil::cvm)
    (inline cvm-types::obj ::cvm)
    (inline cvm-types-set! ::cvm ::obj)
    (inline cvm-functions::obj ::cvm)
    (inline cvm-functions-set! ::cvm ::obj)
    (inline cvm-variables::obj ::cvm)
    (inline cvm-variables-set! ::cvm ::obj)
    (inline cvm-extern-types::obj ::cvm)
    (inline cvm-extern-types-set! ::cvm ::obj)
    (inline cvm-extern-functions::obj ::cvm)
    (inline cvm-extern-functions-set! ::cvm ::obj)
    (inline cvm-extern-variables::obj ::cvm)
    (inline cvm-extern-variables-set! ::cvm ::obj)
    (inline cvm-name::bstring ::cvm)
    (inline cvm-name-set! ::cvm ::bstring)
    (inline cvm-language::symbol ::cvm)
    (inline cvm-language-set! ::cvm ::symbol))))

;; sawc
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-sawc::sawc language1169::symbol name1170::bstring extern-variables1171::obj extern-functions1172::obj extern-types1173::obj variables1174::obj functions1175::obj types1176::obj)
    (inline sawc?::bool ::obj)
    (sawc-nil::sawc)
    (inline sawc-types::obj ::sawc)
    (inline sawc-types-set! ::sawc ::obj)
    (inline sawc-functions::obj ::sawc)
    (inline sawc-functions-set! ::sawc ::obj)
    (inline sawc-variables::obj ::sawc)
    (inline sawc-variables-set! ::sawc ::obj)
    (inline sawc-extern-types::obj ::sawc)
    (inline sawc-extern-types-set! ::sawc ::obj)
    (inline sawc-extern-functions::obj ::sawc)
    (inline sawc-extern-functions-set! ::sawc ::obj)
    (inline sawc-extern-variables::obj ::sawc)
    (inline sawc-extern-variables-set! ::sawc ::obj)
    (inline sawc-name::bstring ::sawc)
    (inline sawc-name-set! ::sawc ::bstring)
    (inline sawc-language::symbol ::sawc)
    (inline sawc-language-set! ::sawc ::symbol))))

;; cgen
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-cgen::cgen language1160::symbol name1161::bstring extern-variables1162::obj extern-functions1163::obj extern-types1164::obj variables1165::obj functions1166::obj types1167::obj)
    (inline cgen?::bool ::obj)
    (cgen-nil::cgen)
    (inline cgen-types::obj ::cgen)
    (inline cgen-types-set! ::cgen ::obj)
    (inline cgen-functions::obj ::cgen)
    (inline cgen-functions-set! ::cgen ::obj)
    (inline cgen-variables::obj ::cgen)
    (inline cgen-variables-set! ::cgen ::obj)
    (inline cgen-extern-types::obj ::cgen)
    (inline cgen-extern-types-set! ::cgen ::obj)
    (inline cgen-extern-functions::obj ::cgen)
    (inline cgen-extern-functions-set! ::cgen ::obj)
    (inline cgen-extern-variables::obj ::cgen)
    (inline cgen-extern-variables-set! ::cgen ::obj)
    (inline cgen-name::bstring ::cgen)
    (inline cgen-name-set! ::cgen ::bstring)
    (inline cgen-language::symbol ::cgen)
    (inline cgen-language-set! ::cgen ::symbol))))

;; jvm
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-jvm::jvm language1143::symbol name1144::bstring extern-variables1145::obj extern-functions1146::obj extern-types1147::obj variables1148::obj functions1149::obj types1150::obj qname1151::symbol classes1152::obj current-class1153::obj declarations1154::obj fields1155::obj methods1156::obj current-method1157::obj code1158::obj)
    (inline jvm?::bool ::obj)
    (jvm-nil::jvm)
    (inline jvm-code::obj ::jvm)
    (inline jvm-code-set! ::jvm ::obj)
    (inline jvm-current-method::obj ::jvm)
    (inline jvm-current-method-set! ::jvm ::obj)
    (inline jvm-methods::obj ::jvm)
    (inline jvm-methods-set! ::jvm ::obj)
    (inline jvm-fields::obj ::jvm)
    (inline jvm-fields-set! ::jvm ::obj)
    (inline jvm-declarations::obj ::jvm)
    (inline jvm-declarations-set! ::jvm ::obj)
    (inline jvm-current-class::obj ::jvm)
    (inline jvm-current-class-set! ::jvm ::obj)
    (inline jvm-classes::obj ::jvm)
    (inline jvm-classes-set! ::jvm ::obj)
    (inline jvm-qname::symbol ::jvm)
    (inline jvm-qname-set! ::jvm ::symbol)
    (inline jvm-types::obj ::jvm)
    (inline jvm-types-set! ::jvm ::obj)
    (inline jvm-functions::obj ::jvm)
    (inline jvm-functions-set! ::jvm ::obj)
    (inline jvm-variables::obj ::jvm)
    (inline jvm-variables-set! ::jvm ::obj)
    (inline jvm-extern-types::obj ::jvm)
    (inline jvm-extern-types-set! ::jvm ::obj)
    (inline jvm-extern-functions::obj ::jvm)
    (inline jvm-extern-functions-set! ::jvm ::obj)
    (inline jvm-extern-variables::obj ::jvm)
    (inline jvm-extern-variables-set! ::jvm ::obj)
    (inline jvm-name::bstring ::jvm)
    (inline jvm-name-set! ::jvm ::bstring)
    (inline jvm-language::symbol ::jvm)
    (inline jvm-language-set! ::jvm ::symbol))))

;; dotnet
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-dotnet::dotnet language1132::symbol name1133::bstring extern-variables1134::obj extern-functions1135::obj extern-types1136::obj variables1137::obj functions1138::obj types1139::obj out1140::output-port qname1141::bstring)
    (inline dotnet?::bool ::obj)
    (dotnet-nil::dotnet)
    (inline dotnet-qname::bstring ::dotnet)
    (inline dotnet-qname-set! ::dotnet ::bstring)
    (inline dotnet-out::output-port ::dotnet)
    (inline dotnet-out-set! ::dotnet ::output-port)
    (inline dotnet-types::obj ::dotnet)
    (inline dotnet-types-set! ::dotnet ::obj)
    (inline dotnet-functions::obj ::dotnet)
    (inline dotnet-functions-set! ::dotnet ::obj)
    (inline dotnet-variables::obj ::dotnet)
    (inline dotnet-variables-set! ::dotnet ::obj)
    (inline dotnet-extern-types::obj ::dotnet)
    (inline dotnet-extern-types-set! ::dotnet ::obj)
    (inline dotnet-extern-functions::obj ::dotnet)
    (inline dotnet-extern-functions-set! ::dotnet ::obj)
    (inline dotnet-extern-variables::obj ::dotnet)
    (inline dotnet-extern-variables-set! ::dotnet ::obj)
    (inline dotnet-name::bstring ::dotnet)
    (inline dotnet-name-set! ::dotnet ::bstring)
    (inline dotnet-language::symbol ::dotnet)
    (inline dotnet-language-set! ::dotnet ::symbol))))

;; jsm
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-jsm::jsm language1122::symbol name1123::bstring extern-variables1124::obj extern-functions1125::obj extern-types1126::obj variables1127::obj functions1128::obj types1129::obj qname1130::bstring)
    (inline jsm?::bool ::obj)
    (jsm-nil::jsm)
    (inline jsm-qname::bstring ::jsm)
    (inline jsm-qname-set! ::jsm ::bstring)
    (inline jsm-types::obj ::jsm)
    (inline jsm-types-set! ::jsm ::obj)
    (inline jsm-functions::obj ::jsm)
    (inline jsm-functions-set! ::jsm ::obj)
    (inline jsm-variables::obj ::jsm)
    (inline jsm-variables-set! ::jsm ::obj)
    (inline jsm-extern-types::obj ::jsm)
    (inline jsm-extern-types-set! ::jsm ::obj)
    (inline jsm-extern-functions::obj ::jsm)
    (inline jsm-extern-functions-set! ::jsm ::obj)
    (inline jsm-extern-variables::obj ::jsm)
    (inline jsm-extern-variables-set! ::jsm ::obj)
    (inline jsm-name::bstring ::jsm)
    (inline jsm-name-set! ::jsm ::bstring)
    (inline jsm-language::symbol ::jsm)
    (inline jsm-language-set! ::jsm ::symbol)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; backend
(define-inline (backend?::bool obj::obj) ((@ isa? __object) obj (@ backend backend_backend)))
(define (backend-nil::backend) (class-nil (@ backend backend_backend)))
(define-inline (backend-types::obj o::backend) (-> |#!bigloo_wallow| o types))
(define-inline (backend-types-set! o::backend v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (backend-functions::obj o::backend) (-> |#!bigloo_wallow| o functions))
(define-inline (backend-functions-set! o::backend v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (backend-variables::obj o::backend) (-> |#!bigloo_wallow| o variables))
(define-inline (backend-variables-set! o::backend v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (backend-extern-types::obj o::backend) (-> |#!bigloo_wallow| o extern-types))
(define-inline (backend-extern-types-set! o::backend v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (backend-extern-functions::obj o::backend) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (backend-extern-functions-set! o::backend v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (backend-extern-variables::obj o::backend) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (backend-extern-variables-set! o::backend v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (backend-name::bstring o::backend) (-> |#!bigloo_wallow| o name))
(define-inline (backend-name-set! o::backend v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (backend-language::symbol o::backend) (-> |#!bigloo_wallow| o language))
(define-inline (backend-language-set! o::backend v::symbol) (set! (-> |#!bigloo_wallow| o language) v))

;; cvm
(define-inline (cvm?::bool obj::obj) ((@ isa? __object) obj (@ cvm backend_backend)))
(define (cvm-nil::cvm) (class-nil (@ cvm backend_backend)))
(define-inline (cvm-types::obj o::cvm) (-> |#!bigloo_wallow| o types))
(define-inline (cvm-types-set! o::cvm v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (cvm-functions::obj o::cvm) (-> |#!bigloo_wallow| o functions))
(define-inline (cvm-functions-set! o::cvm v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (cvm-variables::obj o::cvm) (-> |#!bigloo_wallow| o variables))
(define-inline (cvm-variables-set! o::cvm v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (cvm-extern-types::obj o::cvm) (-> |#!bigloo_wallow| o extern-types))
(define-inline (cvm-extern-types-set! o::cvm v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (cvm-extern-functions::obj o::cvm) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (cvm-extern-functions-set! o::cvm v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (cvm-extern-variables::obj o::cvm) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (cvm-extern-variables-set! o::cvm v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (cvm-name::bstring o::cvm) (-> |#!bigloo_wallow| o name))
(define-inline (cvm-name-set! o::cvm v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (cvm-language::symbol o::cvm) (-> |#!bigloo_wallow| o language))
(define-inline (cvm-language-set! o::cvm v::symbol) (set! (-> |#!bigloo_wallow| o language) v))

;; sawc
(define-inline (make-sawc::sawc language1169::symbol name1170::bstring extern-variables1171::obj extern-functions1172::obj extern-types1173::obj variables1174::obj functions1175::obj types1176::obj) (instantiate::sawc (language language1169) (name name1170) (extern-variables extern-variables1171) (extern-functions extern-functions1172) (extern-types extern-types1173) (variables variables1174) (functions functions1175) (types types1176)))
(define-inline (sawc?::bool obj::obj) ((@ isa? __object) obj (@ sawc backend_backend)))
(define (sawc-nil::sawc) (class-nil (@ sawc backend_backend)))
(define-inline (sawc-types::obj o::sawc) (-> |#!bigloo_wallow| o types))
(define-inline (sawc-types-set! o::sawc v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (sawc-functions::obj o::sawc) (-> |#!bigloo_wallow| o functions))
(define-inline (sawc-functions-set! o::sawc v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (sawc-variables::obj o::sawc) (-> |#!bigloo_wallow| o variables))
(define-inline (sawc-variables-set! o::sawc v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (sawc-extern-types::obj o::sawc) (-> |#!bigloo_wallow| o extern-types))
(define-inline (sawc-extern-types-set! o::sawc v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (sawc-extern-functions::obj o::sawc) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (sawc-extern-functions-set! o::sawc v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (sawc-extern-variables::obj o::sawc) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (sawc-extern-variables-set! o::sawc v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (sawc-name::bstring o::sawc) (-> |#!bigloo_wallow| o name))
(define-inline (sawc-name-set! o::sawc v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (sawc-language::symbol o::sawc) (-> |#!bigloo_wallow| o language))
(define-inline (sawc-language-set! o::sawc v::symbol) (set! (-> |#!bigloo_wallow| o language) v))

;; cgen
(define-inline (make-cgen::cgen language1160::symbol name1161::bstring extern-variables1162::obj extern-functions1163::obj extern-types1164::obj variables1165::obj functions1166::obj types1167::obj) (instantiate::cgen (language language1160) (name name1161) (extern-variables extern-variables1162) (extern-functions extern-functions1163) (extern-types extern-types1164) (variables variables1165) (functions functions1166) (types types1167)))
(define-inline (cgen?::bool obj::obj) ((@ isa? __object) obj (@ cgen backend_backend)))
(define (cgen-nil::cgen) (class-nil (@ cgen backend_backend)))
(define-inline (cgen-types::obj o::cgen) (-> |#!bigloo_wallow| o types))
(define-inline (cgen-types-set! o::cgen v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (cgen-functions::obj o::cgen) (-> |#!bigloo_wallow| o functions))
(define-inline (cgen-functions-set! o::cgen v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (cgen-variables::obj o::cgen) (-> |#!bigloo_wallow| o variables))
(define-inline (cgen-variables-set! o::cgen v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (cgen-extern-types::obj o::cgen) (-> |#!bigloo_wallow| o extern-types))
(define-inline (cgen-extern-types-set! o::cgen v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (cgen-extern-functions::obj o::cgen) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (cgen-extern-functions-set! o::cgen v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (cgen-extern-variables::obj o::cgen) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (cgen-extern-variables-set! o::cgen v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (cgen-name::bstring o::cgen) (-> |#!bigloo_wallow| o name))
(define-inline (cgen-name-set! o::cgen v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (cgen-language::symbol o::cgen) (-> |#!bigloo_wallow| o language))
(define-inline (cgen-language-set! o::cgen v::symbol) (set! (-> |#!bigloo_wallow| o language) v))

;; jvm
(define-inline (make-jvm::jvm language1143::symbol name1144::bstring extern-variables1145::obj extern-functions1146::obj extern-types1147::obj variables1148::obj functions1149::obj types1150::obj qname1151::symbol classes1152::obj current-class1153::obj declarations1154::obj fields1155::obj methods1156::obj current-method1157::obj code1158::obj) (instantiate::jvm (language language1143) (name name1144) (extern-variables extern-variables1145) (extern-functions extern-functions1146) (extern-types extern-types1147) (variables variables1148) (functions functions1149) (types types1150) (qname qname1151) (classes classes1152) (current-class current-class1153) (declarations declarations1154) (fields fields1155) (methods methods1156) (current-method current-method1157) (code code1158)))
(define-inline (jvm?::bool obj::obj) ((@ isa? __object) obj (@ jvm backend_backend)))
(define (jvm-nil::jvm) (class-nil (@ jvm backend_backend)))
(define-inline (jvm-code::obj o::jvm) (-> |#!bigloo_wallow| o code))
(define-inline (jvm-code-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o code) v))
(define-inline (jvm-current-method::obj o::jvm) (-> |#!bigloo_wallow| o current-method))
(define-inline (jvm-current-method-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o current-method) v))
(define-inline (jvm-methods::obj o::jvm) (-> |#!bigloo_wallow| o methods))
(define-inline (jvm-methods-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o methods) v))
(define-inline (jvm-fields::obj o::jvm) (-> |#!bigloo_wallow| o fields))
(define-inline (jvm-fields-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o fields) v))
(define-inline (jvm-declarations::obj o::jvm) (-> |#!bigloo_wallow| o declarations))
(define-inline (jvm-declarations-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o declarations) v))
(define-inline (jvm-current-class::obj o::jvm) (-> |#!bigloo_wallow| o current-class))
(define-inline (jvm-current-class-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o current-class) v))
(define-inline (jvm-classes::obj o::jvm) (-> |#!bigloo_wallow| o classes))
(define-inline (jvm-classes-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o classes) v))
(define-inline (jvm-qname::symbol o::jvm) (-> |#!bigloo_wallow| o qname))
(define-inline (jvm-qname-set! o::jvm v::symbol) (set! (-> |#!bigloo_wallow| o qname) v))
(define-inline (jvm-types::obj o::jvm) (-> |#!bigloo_wallow| o types))
(define-inline (jvm-types-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (jvm-functions::obj o::jvm) (-> |#!bigloo_wallow| o functions))
(define-inline (jvm-functions-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (jvm-variables::obj o::jvm) (-> |#!bigloo_wallow| o variables))
(define-inline (jvm-variables-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (jvm-extern-types::obj o::jvm) (-> |#!bigloo_wallow| o extern-types))
(define-inline (jvm-extern-types-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (jvm-extern-functions::obj o::jvm) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (jvm-extern-functions-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (jvm-extern-variables::obj o::jvm) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (jvm-extern-variables-set! o::jvm v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (jvm-name::bstring o::jvm) (-> |#!bigloo_wallow| o name))
(define-inline (jvm-name-set! o::jvm v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (jvm-language::symbol o::jvm) (-> |#!bigloo_wallow| o language))
(define-inline (jvm-language-set! o::jvm v::symbol) (set! (-> |#!bigloo_wallow| o language) v))

;; dotnet
(define-inline (make-dotnet::dotnet language1132::symbol name1133::bstring extern-variables1134::obj extern-functions1135::obj extern-types1136::obj variables1137::obj functions1138::obj types1139::obj out1140::output-port qname1141::bstring) (instantiate::dotnet (language language1132) (name name1133) (extern-variables extern-variables1134) (extern-functions extern-functions1135) (extern-types extern-types1136) (variables variables1137) (functions functions1138) (types types1139) (out out1140) (qname qname1141)))
(define-inline (dotnet?::bool obj::obj) ((@ isa? __object) obj (@ dotnet backend_backend)))
(define (dotnet-nil::dotnet) (class-nil (@ dotnet backend_backend)))
(define-inline (dotnet-qname::bstring o::dotnet) (-> |#!bigloo_wallow| o qname))
(define-inline (dotnet-qname-set! o::dotnet v::bstring) (set! (-> |#!bigloo_wallow| o qname) v))
(define-inline (dotnet-out::output-port o::dotnet) (-> |#!bigloo_wallow| o out))
(define-inline (dotnet-out-set! o::dotnet v::output-port) (set! (-> |#!bigloo_wallow| o out) v))
(define-inline (dotnet-types::obj o::dotnet) (-> |#!bigloo_wallow| o types))
(define-inline (dotnet-types-set! o::dotnet v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (dotnet-functions::obj o::dotnet) (-> |#!bigloo_wallow| o functions))
(define-inline (dotnet-functions-set! o::dotnet v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (dotnet-variables::obj o::dotnet) (-> |#!bigloo_wallow| o variables))
(define-inline (dotnet-variables-set! o::dotnet v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (dotnet-extern-types::obj o::dotnet) (-> |#!bigloo_wallow| o extern-types))
(define-inline (dotnet-extern-types-set! o::dotnet v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (dotnet-extern-functions::obj o::dotnet) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (dotnet-extern-functions-set! o::dotnet v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (dotnet-extern-variables::obj o::dotnet) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (dotnet-extern-variables-set! o::dotnet v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (dotnet-name::bstring o::dotnet) (-> |#!bigloo_wallow| o name))
(define-inline (dotnet-name-set! o::dotnet v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (dotnet-language::symbol o::dotnet) (-> |#!bigloo_wallow| o language))
(define-inline (dotnet-language-set! o::dotnet v::symbol) (set! (-> |#!bigloo_wallow| o language) v))

;; jsm
(define-inline (make-jsm::jsm language1122::symbol name1123::bstring extern-variables1124::obj extern-functions1125::obj extern-types1126::obj variables1127::obj functions1128::obj types1129::obj qname1130::bstring) (instantiate::jsm (language language1122) (name name1123) (extern-variables extern-variables1124) (extern-functions extern-functions1125) (extern-types extern-types1126) (variables variables1127) (functions functions1128) (types types1129) (qname qname1130)))
(define-inline (jsm?::bool obj::obj) ((@ isa? __object) obj (@ jsm backend_backend)))
(define (jsm-nil::jsm) (class-nil (@ jsm backend_backend)))
(define-inline (jsm-qname::bstring o::jsm) (-> |#!bigloo_wallow| o qname))
(define-inline (jsm-qname-set! o::jsm v::bstring) (set! (-> |#!bigloo_wallow| o qname) v))
(define-inline (jsm-types::obj o::jsm) (-> |#!bigloo_wallow| o types))
(define-inline (jsm-types-set! o::jsm v::obj) (set! (-> |#!bigloo_wallow| o types) v))
(define-inline (jsm-functions::obj o::jsm) (-> |#!bigloo_wallow| o functions))
(define-inline (jsm-functions-set! o::jsm v::obj) (set! (-> |#!bigloo_wallow| o functions) v))
(define-inline (jsm-variables::obj o::jsm) (-> |#!bigloo_wallow| o variables))
(define-inline (jsm-variables-set! o::jsm v::obj) (set! (-> |#!bigloo_wallow| o variables) v))
(define-inline (jsm-extern-types::obj o::jsm) (-> |#!bigloo_wallow| o extern-types))
(define-inline (jsm-extern-types-set! o::jsm v::obj) (set! (-> |#!bigloo_wallow| o extern-types) v))
(define-inline (jsm-extern-functions::obj o::jsm) (-> |#!bigloo_wallow| o extern-functions))
(define-inline (jsm-extern-functions-set! o::jsm v::obj) (set! (-> |#!bigloo_wallow| o extern-functions) v))
(define-inline (jsm-extern-variables::obj o::jsm) (-> |#!bigloo_wallow| o extern-variables))
(define-inline (jsm-extern-variables-set! o::jsm v::obj) (set! (-> |#!bigloo_wallow| o extern-variables) v))
(define-inline (jsm-name::bstring o::jsm) (-> |#!bigloo_wallow| o name))
(define-inline (jsm-name-set! o::jsm v::bstring) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (jsm-language::symbol o::jsm) (-> |#!bigloo_wallow| o language))
(define-inline (jsm-language-set! o::jsm v::symbol) (set! (-> |#!bigloo_wallow| o language) v))
))
