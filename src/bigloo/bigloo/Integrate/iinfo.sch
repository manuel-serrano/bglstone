;; ==========================================================
;; Class accessors
;; Bigloo (4.7a)
;; Inria -- Sophia Antipolis     Thu Mar 6 07:34:14 AM CET 2025 
;; (bigloo -classgen Integrate/iinfo.scm)
;; ==========================================================

;; The directives
(directives

;; svar/Iinfo
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-svar/Iinfo::svar/Iinfo loc1197::obj f-mark1198::obj u-mark1199::obj kaptured?1200::bool celled?1201::bool)
    (inline svar/Iinfo?::bool ::obj)
    (svar/Iinfo-nil::svar/Iinfo)
    (inline svar/Iinfo-celled?::bool ::svar/Iinfo)
    (inline svar/Iinfo-celled?-set! ::svar/Iinfo ::bool)
    (inline svar/Iinfo-kaptured?::bool ::svar/Iinfo)
    (inline svar/Iinfo-kaptured?-set! ::svar/Iinfo ::bool)
    (inline svar/Iinfo-u-mark::obj ::svar/Iinfo)
    (inline svar/Iinfo-u-mark-set! ::svar/Iinfo ::obj)
    (inline svar/Iinfo-f-mark::obj ::svar/Iinfo)
    (inline svar/Iinfo-f-mark-set! ::svar/Iinfo ::obj)
    (inline svar/Iinfo-loc::obj ::svar/Iinfo)
    (inline svar/Iinfo-loc-set! ::svar/Iinfo ::obj))))

;; sexit/Iinfo
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-sexit/Iinfo::sexit/Iinfo handler1190::obj detached?1191::bool f-mark1192::obj u-mark1193::obj kaptured?1194::bool celled?1195::bool)
    (inline sexit/Iinfo?::bool ::obj)
    (sexit/Iinfo-nil::sexit/Iinfo)
    (inline sexit/Iinfo-celled?::bool ::sexit/Iinfo)
    (inline sexit/Iinfo-celled?-set! ::sexit/Iinfo ::bool)
    (inline sexit/Iinfo-kaptured?::bool ::sexit/Iinfo)
    (inline sexit/Iinfo-kaptured?-set! ::sexit/Iinfo ::bool)
    (inline sexit/Iinfo-u-mark::obj ::sexit/Iinfo)
    (inline sexit/Iinfo-u-mark-set! ::sexit/Iinfo ::obj)
    (inline sexit/Iinfo-f-mark::obj ::sexit/Iinfo)
    (inline sexit/Iinfo-f-mark-set! ::sexit/Iinfo ::obj)
    (inline sexit/Iinfo-detached?::bool ::sexit/Iinfo)
    (inline sexit/Iinfo-detached?-set! ::sexit/Iinfo ::bool)
    (inline sexit/Iinfo-handler::obj ::sexit/Iinfo)
    (inline sexit/Iinfo-handler-set! ::sexit/Iinfo ::obj))))

;; sfun/Iinfo
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-sfun/Iinfo::sfun/Iinfo arity1158::long side-effect?1159::obj predicate-of1160::obj stack-allocator1161::obj top?1162::bool the-closure1163::obj effect1164::obj property1165::obj args1166::obj body1167::obj class1168::obj dsssl-keywords1169::obj loc1170::obj owner1171::obj free1172::obj bound1173::obj cfrom1174::obj cto1175::obj K1176::obj K*1177::obj U1178::obj Cn1179::obj Ct1180::obj kont1181::obj G?1182::bool L1183::obj Led1184::obj istamp1185::obj global1186::obj kaptured1187::obj tail-coercion1188::obj)
    (inline sfun/Iinfo?::bool ::obj)
    (sfun/Iinfo-nil::sfun/Iinfo)
    (inline sfun/Iinfo-tail-coercion::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-tail-coercion-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-kaptured::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-kaptured-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-global::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-global-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-istamp::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-istamp-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-Led::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-Led-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-L::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-L-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-G?::bool ::sfun/Iinfo)
    (inline sfun/Iinfo-G?-set! ::sfun/Iinfo ::bool)
    (inline sfun/Iinfo-kont::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-kont-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-Ct::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-Ct-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-Cn::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-Cn-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-U::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-U-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-K*::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-K*-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-K::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-K-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-cto::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-cto-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-cfrom::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-cfrom-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-bound::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-bound-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-free::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-free-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-owner::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-owner-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-loc::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-loc-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-dsssl-keywords::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-dsssl-keywords-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-class::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-class-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-body::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-body-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-args::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-args-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-property::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-property-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-effect::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-effect-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-the-closure::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-the-closure-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-top?::bool ::sfun/Iinfo)
    (inline sfun/Iinfo-top?-set! ::sfun/Iinfo ::bool)
    (inline sfun/Iinfo-stack-allocator::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-stack-allocator-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-predicate-of::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-predicate-of-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-side-effect?::obj ::sfun/Iinfo)
    (inline sfun/Iinfo-side-effect?-set! ::sfun/Iinfo ::obj)
    (inline sfun/Iinfo-arity::long ::sfun/Iinfo)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; svar/Iinfo
(define-inline (make-svar/Iinfo::svar/Iinfo loc1197::obj f-mark1198::obj u-mark1199::obj kaptured?1200::bool celled?1201::bool) (instantiate::svar/Iinfo (loc loc1197) (f-mark f-mark1198) (u-mark u-mark1199) (kaptured? kaptured?1200) (celled? celled?1201)))
(define-inline (svar/Iinfo?::bool obj::obj) ((@ isa? __object) obj (@ svar/Iinfo integrate_info)))
(define (svar/Iinfo-nil::svar/Iinfo) (class-nil (@ svar/Iinfo integrate_info)))
(define-inline (svar/Iinfo-celled?::bool o::svar/Iinfo) (-> |#!bigloo_wallow| o celled?))
(define-inline (svar/Iinfo-celled?-set! o::svar/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o celled?) v))
(define-inline (svar/Iinfo-kaptured?::bool o::svar/Iinfo) (-> |#!bigloo_wallow| o kaptured?))
(define-inline (svar/Iinfo-kaptured?-set! o::svar/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o kaptured?) v))
(define-inline (svar/Iinfo-u-mark::obj o::svar/Iinfo) (-> |#!bigloo_wallow| o u-mark))
(define-inline (svar/Iinfo-u-mark-set! o::svar/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o u-mark) v))
(define-inline (svar/Iinfo-f-mark::obj o::svar/Iinfo) (-> |#!bigloo_wallow| o f-mark))
(define-inline (svar/Iinfo-f-mark-set! o::svar/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o f-mark) v))
(define-inline (svar/Iinfo-loc::obj o::svar/Iinfo) (-> |#!bigloo_wallow| o loc))
(define-inline (svar/Iinfo-loc-set! o::svar/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; sexit/Iinfo
(define-inline (make-sexit/Iinfo::sexit/Iinfo handler1190::obj detached?1191::bool f-mark1192::obj u-mark1193::obj kaptured?1194::bool celled?1195::bool) (instantiate::sexit/Iinfo (handler handler1190) (detached? detached?1191) (f-mark f-mark1192) (u-mark u-mark1193) (kaptured? kaptured?1194) (celled? celled?1195)))
(define-inline (sexit/Iinfo?::bool obj::obj) ((@ isa? __object) obj (@ sexit/Iinfo integrate_info)))
(define (sexit/Iinfo-nil::sexit/Iinfo) (class-nil (@ sexit/Iinfo integrate_info)))
(define-inline (sexit/Iinfo-celled?::bool o::sexit/Iinfo) (-> |#!bigloo_wallow| o celled?))
(define-inline (sexit/Iinfo-celled?-set! o::sexit/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o celled?) v))
(define-inline (sexit/Iinfo-kaptured?::bool o::sexit/Iinfo) (-> |#!bigloo_wallow| o kaptured?))
(define-inline (sexit/Iinfo-kaptured?-set! o::sexit/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o kaptured?) v))
(define-inline (sexit/Iinfo-u-mark::obj o::sexit/Iinfo) (-> |#!bigloo_wallow| o u-mark))
(define-inline (sexit/Iinfo-u-mark-set! o::sexit/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o u-mark) v))
(define-inline (sexit/Iinfo-f-mark::obj o::sexit/Iinfo) (-> |#!bigloo_wallow| o f-mark))
(define-inline (sexit/Iinfo-f-mark-set! o::sexit/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o f-mark) v))
(define-inline (sexit/Iinfo-detached?::bool o::sexit/Iinfo) (-> |#!bigloo_wallow| o detached?))
(define-inline (sexit/Iinfo-detached?-set! o::sexit/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o detached?) v))
(define-inline (sexit/Iinfo-handler::obj o::sexit/Iinfo) (-> |#!bigloo_wallow| o handler))
(define-inline (sexit/Iinfo-handler-set! o::sexit/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o handler) v))

;; sfun/Iinfo
(define-inline (make-sfun/Iinfo::sfun/Iinfo arity1158::long side-effect?1159::obj predicate-of1160::obj stack-allocator1161::obj top?1162::bool the-closure1163::obj effect1164::obj property1165::obj args1166::obj body1167::obj class1168::obj dsssl-keywords1169::obj loc1170::obj owner1171::obj free1172::obj bound1173::obj cfrom1174::obj cto1175::obj K1176::obj K*1177::obj U1178::obj Cn1179::obj Ct1180::obj kont1181::obj G?1182::bool L1183::obj Led1184::obj istamp1185::obj global1186::obj kaptured1187::obj tail-coercion1188::obj) (instantiate::sfun/Iinfo (arity arity1158) (side-effect? side-effect?1159) (predicate-of predicate-of1160) (stack-allocator stack-allocator1161) (top? top?1162) (the-closure the-closure1163) (effect effect1164) (property property1165) (args args1166) (body body1167) (class class1168) (dsssl-keywords dsssl-keywords1169) (loc loc1170) (owner owner1171) (free free1172) (bound bound1173) (cfrom cfrom1174) (cto cto1175) (K K1176) (K* K*1177) (U U1178) (Cn Cn1179) (Ct Ct1180) (kont kont1181) (G? G?1182) (L L1183) (Led Led1184) (istamp istamp1185) (global global1186) (kaptured kaptured1187) (tail-coercion tail-coercion1188)))
(define-inline (sfun/Iinfo?::bool obj::obj) ((@ isa? __object) obj (@ sfun/Iinfo integrate_info)))
(define (sfun/Iinfo-nil::sfun/Iinfo) (class-nil (@ sfun/Iinfo integrate_info)))
(define-inline (sfun/Iinfo-tail-coercion::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o tail-coercion))
(define-inline (sfun/Iinfo-tail-coercion-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o tail-coercion) v))
(define-inline (sfun/Iinfo-kaptured::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o kaptured))
(define-inline (sfun/Iinfo-kaptured-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o kaptured) v))
(define-inline (sfun/Iinfo-global::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o global))
(define-inline (sfun/Iinfo-global-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o global) v))
(define-inline (sfun/Iinfo-istamp::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o istamp))
(define-inline (sfun/Iinfo-istamp-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o istamp) v))
(define-inline (sfun/Iinfo-Led::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o Led))
(define-inline (sfun/Iinfo-Led-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o Led) v))
(define-inline (sfun/Iinfo-L::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o L))
(define-inline (sfun/Iinfo-L-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o L) v))
(define-inline (sfun/Iinfo-G?::bool o::sfun/Iinfo) (-> |#!bigloo_wallow| o G?))
(define-inline (sfun/Iinfo-G?-set! o::sfun/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o G?) v))
(define-inline (sfun/Iinfo-kont::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o kont))
(define-inline (sfun/Iinfo-kont-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o kont) v))
(define-inline (sfun/Iinfo-Ct::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o Ct))
(define-inline (sfun/Iinfo-Ct-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o Ct) v))
(define-inline (sfun/Iinfo-Cn::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o Cn))
(define-inline (sfun/Iinfo-Cn-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o Cn) v))
(define-inline (sfun/Iinfo-U::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o U))
(define-inline (sfun/Iinfo-U-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o U) v))
(define-inline (sfun/Iinfo-K*::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o K*))
(define-inline (sfun/Iinfo-K*-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o K*) v))
(define-inline (sfun/Iinfo-K::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o K))
(define-inline (sfun/Iinfo-K-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o K) v))
(define-inline (sfun/Iinfo-cto::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o cto))
(define-inline (sfun/Iinfo-cto-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o cto) v))
(define-inline (sfun/Iinfo-cfrom::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o cfrom))
(define-inline (sfun/Iinfo-cfrom-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o cfrom) v))
(define-inline (sfun/Iinfo-bound::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o bound))
(define-inline (sfun/Iinfo-bound-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o bound) v))
(define-inline (sfun/Iinfo-free::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o free))
(define-inline (sfun/Iinfo-free-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o free) v))
(define-inline (sfun/Iinfo-owner::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o owner))
(define-inline (sfun/Iinfo-owner-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (sfun/Iinfo-loc::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o loc))
(define-inline (sfun/Iinfo-loc-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o loc) v))
(define-inline (sfun/Iinfo-dsssl-keywords::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o dsssl-keywords))
(define-inline (sfun/Iinfo-dsssl-keywords-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o dsssl-keywords) v))
(define-inline (sfun/Iinfo-class::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o class))
(define-inline (sfun/Iinfo-class-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o class) v))
(define-inline (sfun/Iinfo-body::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o body))
(define-inline (sfun/Iinfo-body-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o body) v))
(define-inline (sfun/Iinfo-args::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o args))
(define-inline (sfun/Iinfo-args-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (sfun/Iinfo-property::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o property))
(define-inline (sfun/Iinfo-property-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o property) v))
(define-inline (sfun/Iinfo-effect::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o effect))
(define-inline (sfun/Iinfo-effect-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o effect) v))
(define-inline (sfun/Iinfo-the-closure::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o the-closure))
(define-inline (sfun/Iinfo-the-closure-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o the-closure) v))
(define-inline (sfun/Iinfo-top?::bool o::sfun/Iinfo) (-> |#!bigloo_wallow| o top?))
(define-inline (sfun/Iinfo-top?-set! o::sfun/Iinfo v::bool) (set! (-> |#!bigloo_wallow| o top?) v))
(define-inline (sfun/Iinfo-stack-allocator::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o stack-allocator))
(define-inline (sfun/Iinfo-stack-allocator-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o stack-allocator) v))
(define-inline (sfun/Iinfo-predicate-of::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o predicate-of))
(define-inline (sfun/Iinfo-predicate-of-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o predicate-of) v))
(define-inline (sfun/Iinfo-side-effect?::obj o::sfun/Iinfo) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (sfun/Iinfo-side-effect?-set! o::sfun/Iinfo v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (sfun/Iinfo-arity::long o::sfun/Iinfo) (-> |#!bigloo_wallow| o arity))
(define-inline (sfun/Iinfo-arity-set! o::sfun/Iinfo v::long) (set! (-> |#!bigloo_wallow| o arity) v))
))
