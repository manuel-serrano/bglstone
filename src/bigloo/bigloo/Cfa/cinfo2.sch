;; ==========================================================
;; Class accessors
;; Bigloo (4.7a)
;; Inria -- Sophia Antipolis     Thu Mar 6 07:34:14 AM CET 2025 
;; (bigloo -classgen Cfa/cinfo2.scm)
;; ==========================================================

;; The directives
(directives

;; pre-arithmetic-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-arithmetic-app::pre-arithmetic-app loc1482::obj type1483::type side-effect?1484::obj key1485::obj fun1486::var args1487::obj spec-types1488::pair)
    (inline pre-arithmetic-app?::bool ::obj)
    (pre-arithmetic-app-nil::pre-arithmetic-app)
    (inline pre-arithmetic-app-spec-types::pair ::pre-arithmetic-app)
    (inline pre-arithmetic-app-args::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-args-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-fun::var ::pre-arithmetic-app)
    (inline pre-arithmetic-app-fun-set! ::pre-arithmetic-app ::var)
    (inline pre-arithmetic-app-key::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-key-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-side-effect?::obj ::pre-arithmetic-app)
    (inline pre-arithmetic-app-side-effect?-set! ::pre-arithmetic-app ::obj)
    (inline pre-arithmetic-app-type::type ::pre-arithmetic-app)
    (inline pre-arithmetic-app-type-set! ::pre-arithmetic-app ::type)
    (inline pre-arithmetic-app-loc::obj ::pre-arithmetic-app))))

;; arithmetic-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-arithmetic-app::arithmetic-app loc1473::obj type1474::type side-effect?1475::obj key1476::obj fun1477::var args1478::obj approx1479::approx spec-types1480::pair)
    (inline arithmetic-app?::bool ::obj)
    (arithmetic-app-nil::arithmetic-app)
    (inline arithmetic-app-spec-types::pair ::arithmetic-app)
    (inline arithmetic-app-approx::approx ::arithmetic-app)
    (inline arithmetic-app-args::obj ::arithmetic-app)
    (inline arithmetic-app-args-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-fun::var ::arithmetic-app)
    (inline arithmetic-app-fun-set! ::arithmetic-app ::var)
    (inline arithmetic-app-key::obj ::arithmetic-app)
    (inline arithmetic-app-key-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-side-effect?::obj ::arithmetic-app)
    (inline arithmetic-app-side-effect?-set! ::arithmetic-app ::obj)
    (inline arithmetic-app-type::type ::arithmetic-app)
    (inline arithmetic-app-type-set! ::arithmetic-app ::type)
    (inline arithmetic-app-loc::obj ::arithmetic-app))))

;; pre-make-procedure-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-procedure-app::pre-make-procedure-app loc1465::obj type1466::type side-effect?1467::obj key1468::obj fun1469::var args1470::obj owner1471::variable)
    (inline pre-make-procedure-app?::bool ::obj)
    (pre-make-procedure-app-nil::pre-make-procedure-app)
    (inline pre-make-procedure-app-owner::variable ::pre-make-procedure-app)
    (inline pre-make-procedure-app-args::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-args-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-fun::var ::pre-make-procedure-app)
    (inline pre-make-procedure-app-fun-set! ::pre-make-procedure-app ::var)
    (inline pre-make-procedure-app-key::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-key-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-side-effect?::obj ::pre-make-procedure-app)
    (inline pre-make-procedure-app-side-effect?-set! ::pre-make-procedure-app ::obj)
    (inline pre-make-procedure-app-type::type ::pre-make-procedure-app)
    (inline pre-make-procedure-app-type-set! ::pre-make-procedure-app ::type)
    (inline pre-make-procedure-app-loc::obj ::pre-make-procedure-app))))

;; pre-procedure-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-procedure-ref-app::pre-procedure-ref-app loc1458::obj type1459::type side-effect?1460::obj key1461::obj fun1462::var args1463::obj)
    (inline pre-procedure-ref-app?::bool ::obj)
    (pre-procedure-ref-app-nil::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-args::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-args-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-fun::var ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-fun-set! ::pre-procedure-ref-app ::var)
    (inline pre-procedure-ref-app-key::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-key-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-side-effect?::obj ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-side-effect?-set! ::pre-procedure-ref-app ::obj)
    (inline pre-procedure-ref-app-type::type ::pre-procedure-ref-app)
    (inline pre-procedure-ref-app-type-set! ::pre-procedure-ref-app ::type)
    (inline pre-procedure-ref-app-loc::obj ::pre-procedure-ref-app))))

;; pre-procedure-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-procedure-set!-app::pre-procedure-set!-app loc1451::obj type1452::type side-effect?1453::obj key1454::obj fun1455::var args1456::obj)
    (inline pre-procedure-set!-app?::bool ::obj)
    (pre-procedure-set!-app-nil::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-args::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-args-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-fun::var ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-fun-set! ::pre-procedure-set!-app ::var)
    (inline pre-procedure-set!-app-key::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-key-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-side-effect?::obj ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-side-effect?-set! ::pre-procedure-set!-app ::obj)
    (inline pre-procedure-set!-app-type::type ::pre-procedure-set!-app)
    (inline pre-procedure-set!-app-type-set! ::pre-procedure-set!-app ::type)
    (inline pre-procedure-set!-app-loc::obj ::pre-procedure-set!-app))))

;; make-procedure-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-procedure-app::make-procedure-app loc1436::obj type1437::type side-effect?1438::obj key1439::obj fun1440::var args1441::obj approx1442::approx values-approx1443::vector lost-stamp1444::long X-T?1445::bool X1446::bool T1447::bool owner1448::variable stack-stamp1449::obj)
    (inline make-procedure-app?::bool ::obj)
    (make-procedure-app-nil::make-procedure-app)
    (inline make-procedure-app-stack-stamp::obj ::make-procedure-app)
    (inline make-procedure-app-stack-stamp-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-owner::variable ::make-procedure-app)
    (inline make-procedure-app-T::bool ::make-procedure-app)
    (inline make-procedure-app-T-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-X::bool ::make-procedure-app)
    (inline make-procedure-app-X-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-X-T?::bool ::make-procedure-app)
    (inline make-procedure-app-X-T?-set! ::make-procedure-app ::bool)
    (inline make-procedure-app-lost-stamp::long ::make-procedure-app)
    (inline make-procedure-app-lost-stamp-set! ::make-procedure-app ::long)
    (inline make-procedure-app-values-approx::vector ::make-procedure-app)
    (inline make-procedure-app-values-approx-set! ::make-procedure-app ::vector)
    (inline make-procedure-app-approx::approx ::make-procedure-app)
    (inline make-procedure-app-approx-set! ::make-procedure-app ::approx)
    (inline make-procedure-app-args::obj ::make-procedure-app)
    (inline make-procedure-app-args-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-fun::var ::make-procedure-app)
    (inline make-procedure-app-fun-set! ::make-procedure-app ::var)
    (inline make-procedure-app-key::obj ::make-procedure-app)
    (inline make-procedure-app-key-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-side-effect?::obj ::make-procedure-app)
    (inline make-procedure-app-side-effect?-set! ::make-procedure-app ::obj)
    (inline make-procedure-app-type::type ::make-procedure-app)
    (inline make-procedure-app-type-set! ::make-procedure-app ::type)
    (inline make-procedure-app-loc::obj ::make-procedure-app))))

;; procedure-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-procedure-ref-app::procedure-ref-app loc1428::obj type1429::type side-effect?1430::obj key1431::obj fun1432::var args1433::obj approx1434::approx)
    (inline procedure-ref-app?::bool ::obj)
    (procedure-ref-app-nil::procedure-ref-app)
    (inline procedure-ref-app-approx::approx ::procedure-ref-app)
    (inline procedure-ref-app-args::obj ::procedure-ref-app)
    (inline procedure-ref-app-args-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-fun::var ::procedure-ref-app)
    (inline procedure-ref-app-fun-set! ::procedure-ref-app ::var)
    (inline procedure-ref-app-key::obj ::procedure-ref-app)
    (inline procedure-ref-app-key-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-side-effect?::obj ::procedure-ref-app)
    (inline procedure-ref-app-side-effect?-set! ::procedure-ref-app ::obj)
    (inline procedure-ref-app-type::type ::procedure-ref-app)
    (inline procedure-ref-app-type-set! ::procedure-ref-app ::type)
    (inline procedure-ref-app-loc::obj ::procedure-ref-app))))

;; procedure-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-procedure-set!-app::procedure-set!-app loc1420::obj type1421::type side-effect?1422::obj key1423::obj fun1424::var args1425::obj approx1426::approx)
    (inline procedure-set!-app?::bool ::obj)
    (procedure-set!-app-nil::procedure-set!-app)
    (inline procedure-set!-app-approx::approx ::procedure-set!-app)
    (inline procedure-set!-app-args::obj ::procedure-set!-app)
    (inline procedure-set!-app-args-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-fun::var ::procedure-set!-app)
    (inline procedure-set!-app-fun-set! ::procedure-set!-app ::var)
    (inline procedure-set!-app-key::obj ::procedure-set!-app)
    (inline procedure-set!-app-key-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-side-effect?::obj ::procedure-set!-app)
    (inline procedure-set!-app-side-effect?-set! ::procedure-set!-app ::obj)
    (inline procedure-set!-app-type::type ::procedure-set!-app)
    (inline procedure-set!-app-type-set! ::procedure-set!-app ::type)
    (inline procedure-set!-app-loc::obj ::procedure-set!-app))))

;; pre-make-vector-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-vector-app::pre-make-vector-app loc1412::obj type1413::type side-effect?1414::obj key1415::obj fun1416::var args1417::obj owner1418::variable)
    (inline pre-make-vector-app?::bool ::obj)
    (pre-make-vector-app-nil::pre-make-vector-app)
    (inline pre-make-vector-app-owner::variable ::pre-make-vector-app)
    (inline pre-make-vector-app-args::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-args-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-fun::var ::pre-make-vector-app)
    (inline pre-make-vector-app-fun-set! ::pre-make-vector-app ::var)
    (inline pre-make-vector-app-key::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-key-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-side-effect?::obj ::pre-make-vector-app)
    (inline pre-make-vector-app-side-effect?-set! ::pre-make-vector-app ::obj)
    (inline pre-make-vector-app-type::type ::pre-make-vector-app)
    (inline pre-make-vector-app-type-set! ::pre-make-vector-app ::type)
    (inline pre-make-vector-app-loc::obj ::pre-make-vector-app))))

;; make-vector-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-vector-app::make-vector-app loc1399::obj type1400::type side-effect?1401::obj key1402::obj fun1403::var args1404::obj approx1405::approx value-approx1406::approx lost-stamp1407::long owner1408::variable stack-stamp1409::obj seen?1410::bool)
    (inline make-vector-app?::bool ::obj)
    (make-vector-app-nil::make-vector-app)
    (inline make-vector-app-seen?::bool ::make-vector-app)
    (inline make-vector-app-seen?-set! ::make-vector-app ::bool)
    (inline make-vector-app-stack-stamp::obj ::make-vector-app)
    (inline make-vector-app-stack-stamp-set! ::make-vector-app ::obj)
    (inline make-vector-app-owner::variable ::make-vector-app)
    (inline make-vector-app-lost-stamp::long ::make-vector-app)
    (inline make-vector-app-lost-stamp-set! ::make-vector-app ::long)
    (inline make-vector-app-value-approx::approx ::make-vector-app)
    (inline make-vector-app-approx::approx ::make-vector-app)
    (inline make-vector-app-approx-set! ::make-vector-app ::approx)
    (inline make-vector-app-args::obj ::make-vector-app)
    (inline make-vector-app-args-set! ::make-vector-app ::obj)
    (inline make-vector-app-fun::var ::make-vector-app)
    (inline make-vector-app-fun-set! ::make-vector-app ::var)
    (inline make-vector-app-key::obj ::make-vector-app)
    (inline make-vector-app-key-set! ::make-vector-app ::obj)
    (inline make-vector-app-side-effect?::obj ::make-vector-app)
    (inline make-vector-app-side-effect?-set! ::make-vector-app ::obj)
    (inline make-vector-app-type::type ::make-vector-app)
    (inline make-vector-app-type-set! ::make-vector-app ::type)
    (inline make-vector-app-loc::obj ::make-vector-app))))

;; pre-make-struct-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-make-struct-app::pre-make-struct-app loc1391::obj type1392::type side-effect?1393::obj key1394::obj fun1395::var args1396::obj owner1397::variable)
    (inline pre-make-struct-app?::bool ::obj)
    (pre-make-struct-app-nil::pre-make-struct-app)
    (inline pre-make-struct-app-owner::variable ::pre-make-struct-app)
    (inline pre-make-struct-app-args::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-args-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-fun::var ::pre-make-struct-app)
    (inline pre-make-struct-app-fun-set! ::pre-make-struct-app ::var)
    (inline pre-make-struct-app-key::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-key-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-side-effect?::obj ::pre-make-struct-app)
    (inline pre-make-struct-app-side-effect?-set! ::pre-make-struct-app ::obj)
    (inline pre-make-struct-app-type::type ::pre-make-struct-app)
    (inline pre-make-struct-app-type-set! ::pre-make-struct-app ::type)
    (inline pre-make-struct-app-loc::obj ::pre-make-struct-app))))

;; pre-struct-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-struct-ref-app::pre-struct-ref-app loc1384::obj type1385::type side-effect?1386::obj key1387::obj fun1388::var args1389::obj)
    (inline pre-struct-ref-app?::bool ::obj)
    (pre-struct-ref-app-nil::pre-struct-ref-app)
    (inline pre-struct-ref-app-args::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-args-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-fun::var ::pre-struct-ref-app)
    (inline pre-struct-ref-app-fun-set! ::pre-struct-ref-app ::var)
    (inline pre-struct-ref-app-key::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-key-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-side-effect?::obj ::pre-struct-ref-app)
    (inline pre-struct-ref-app-side-effect?-set! ::pre-struct-ref-app ::obj)
    (inline pre-struct-ref-app-type::type ::pre-struct-ref-app)
    (inline pre-struct-ref-app-type-set! ::pre-struct-ref-app ::type)
    (inline pre-struct-ref-app-loc::obj ::pre-struct-ref-app))))

;; pre-struct-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-pre-struct-set!-app::pre-struct-set!-app loc1377::obj type1378::type side-effect?1379::obj key1380::obj fun1381::var args1382::obj)
    (inline pre-struct-set!-app?::bool ::obj)
    (pre-struct-set!-app-nil::pre-struct-set!-app)
    (inline pre-struct-set!-app-args::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-args-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-fun::var ::pre-struct-set!-app)
    (inline pre-struct-set!-app-fun-set! ::pre-struct-set!-app ::var)
    (inline pre-struct-set!-app-key::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-key-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-side-effect?::obj ::pre-struct-set!-app)
    (inline pre-struct-set!-app-side-effect?-set! ::pre-struct-set!-app ::obj)
    (inline pre-struct-set!-app-type::type ::pre-struct-set!-app)
    (inline pre-struct-set!-app-type-set! ::pre-struct-set!-app ::type)
    (inline pre-struct-set!-app-loc::obj ::pre-struct-set!-app))))

;; make-struct-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-make-struct-app::make-struct-app loc1365::obj type1366::type side-effect?1367::obj key1368::obj fun1369::var args1370::obj approx1371::approx value-approx1372::approx lost-stamp1373::long owner1374::variable stack-stamp1375::obj)
    (inline make-struct-app?::bool ::obj)
    (make-struct-app-nil::make-struct-app)
    (inline make-struct-app-stack-stamp::obj ::make-struct-app)
    (inline make-struct-app-stack-stamp-set! ::make-struct-app ::obj)
    (inline make-struct-app-owner::variable ::make-struct-app)
    (inline make-struct-app-lost-stamp::long ::make-struct-app)
    (inline make-struct-app-lost-stamp-set! ::make-struct-app ::long)
    (inline make-struct-app-value-approx::approx ::make-struct-app)
    (inline make-struct-app-approx::approx ::make-struct-app)
    (inline make-struct-app-approx-set! ::make-struct-app ::approx)
    (inline make-struct-app-args::obj ::make-struct-app)
    (inline make-struct-app-args-set! ::make-struct-app ::obj)
    (inline make-struct-app-fun::var ::make-struct-app)
    (inline make-struct-app-fun-set! ::make-struct-app ::var)
    (inline make-struct-app-key::obj ::make-struct-app)
    (inline make-struct-app-key-set! ::make-struct-app ::obj)
    (inline make-struct-app-side-effect?::obj ::make-struct-app)
    (inline make-struct-app-side-effect?-set! ::make-struct-app ::obj)
    (inline make-struct-app-type::type ::make-struct-app)
    (inline make-struct-app-type-set! ::make-struct-app ::type)
    (inline make-struct-app-loc::obj ::make-struct-app))))

;; struct-ref-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-struct-ref-app::struct-ref-app loc1357::obj type1358::type side-effect?1359::obj key1360::obj fun1361::var args1362::obj approx1363::approx)
    (inline struct-ref-app?::bool ::obj)
    (struct-ref-app-nil::struct-ref-app)
    (inline struct-ref-app-approx::approx ::struct-ref-app)
    (inline struct-ref-app-args::obj ::struct-ref-app)
    (inline struct-ref-app-args-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-fun::var ::struct-ref-app)
    (inline struct-ref-app-fun-set! ::struct-ref-app ::var)
    (inline struct-ref-app-key::obj ::struct-ref-app)
    (inline struct-ref-app-key-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-side-effect?::obj ::struct-ref-app)
    (inline struct-ref-app-side-effect?-set! ::struct-ref-app ::obj)
    (inline struct-ref-app-type::type ::struct-ref-app)
    (inline struct-ref-app-type-set! ::struct-ref-app ::type)
    (inline struct-ref-app-loc::obj ::struct-ref-app))))

;; struct-set!-app
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-struct-set!-app::struct-set!-app loc1349::obj type1350::type side-effect?1351::obj key1352::obj fun1353::var args1354::obj approx1355::approx)
    (inline struct-set!-app?::bool ::obj)
    (struct-set!-app-nil::struct-set!-app)
    (inline struct-set!-app-approx::approx ::struct-set!-app)
    (inline struct-set!-app-args::obj ::struct-set!-app)
    (inline struct-set!-app-args-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-fun::var ::struct-set!-app)
    (inline struct-set!-app-fun-set! ::struct-set!-app ::var)
    (inline struct-set!-app-key::obj ::struct-set!-app)
    (inline struct-set!-app-key-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-side-effect?::obj ::struct-set!-app)
    (inline struct-set!-app-side-effect?-set! ::struct-set!-app ::obj)
    (inline struct-set!-app-type::type ::struct-set!-app)
    (inline struct-set!-app-type-set! ::struct-set!-app ::type)
    (inline struct-set!-app-loc::obj ::struct-set!-app)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; pre-arithmetic-app
(define-inline (make-pre-arithmetic-app::pre-arithmetic-app loc1482::obj type1483::type side-effect?1484::obj key1485::obj fun1486::var args1487::obj spec-types1488::pair) (instantiate::pre-arithmetic-app (loc loc1482) (type type1483) (side-effect? side-effect?1484) (key key1485) (fun fun1486) (args args1487) (spec-types spec-types1488)))
(define-inline (pre-arithmetic-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-arithmetic-app cfa_info2)))
(define (pre-arithmetic-app-nil::pre-arithmetic-app) (class-nil (@ pre-arithmetic-app cfa_info2)))
(define-inline (pre-arithmetic-app-spec-types::pair o::pre-arithmetic-app) (-> |#!bigloo_wallow| o spec-types))
(define-inline (pre-arithmetic-app-spec-types-set! o::pre-arithmetic-app v::pair) (set! (-> |#!bigloo_wallow| o spec-types) v))
(define-inline (pre-arithmetic-app-args::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-arithmetic-app-args-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-arithmetic-app-fun::var o::pre-arithmetic-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-arithmetic-app-fun-set! o::pre-arithmetic-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-arithmetic-app-key::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-arithmetic-app-key-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-arithmetic-app-side-effect?::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-arithmetic-app-side-effect?-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-arithmetic-app-type::type o::pre-arithmetic-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-arithmetic-app-type-set! o::pre-arithmetic-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-arithmetic-app-loc::obj o::pre-arithmetic-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-arithmetic-app-loc-set! o::pre-arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; arithmetic-app
(define-inline (make-arithmetic-app::arithmetic-app loc1473::obj type1474::type side-effect?1475::obj key1476::obj fun1477::var args1478::obj approx1479::approx spec-types1480::pair) (instantiate::arithmetic-app (loc loc1473) (type type1474) (side-effect? side-effect?1475) (key key1476) (fun fun1477) (args args1478) (approx approx1479) (spec-types spec-types1480)))
(define-inline (arithmetic-app?::bool obj::obj) ((@ isa? __object) obj (@ arithmetic-app cfa_info2)))
(define (arithmetic-app-nil::arithmetic-app) (class-nil (@ arithmetic-app cfa_info2)))
(define-inline (arithmetic-app-spec-types::pair o::arithmetic-app) (-> |#!bigloo_wallow| o spec-types))
(define-inline (arithmetic-app-spec-types-set! o::arithmetic-app v::pair) (set! (-> |#!bigloo_wallow| o spec-types) v))
(define-inline (arithmetic-app-approx::approx o::arithmetic-app) (-> |#!bigloo_wallow| o approx))
(define-inline (arithmetic-app-approx-set! o::arithmetic-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (arithmetic-app-args::obj o::arithmetic-app) (-> |#!bigloo_wallow| o args))
(define-inline (arithmetic-app-args-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (arithmetic-app-fun::var o::arithmetic-app) (-> |#!bigloo_wallow| o fun))
(define-inline (arithmetic-app-fun-set! o::arithmetic-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (arithmetic-app-key::obj o::arithmetic-app) (-> |#!bigloo_wallow| o key))
(define-inline (arithmetic-app-key-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (arithmetic-app-side-effect?::obj o::arithmetic-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (arithmetic-app-side-effect?-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (arithmetic-app-type::type o::arithmetic-app) (-> |#!bigloo_wallow| o type))
(define-inline (arithmetic-app-type-set! o::arithmetic-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (arithmetic-app-loc::obj o::arithmetic-app) (-> |#!bigloo_wallow| o loc))
(define-inline (arithmetic-app-loc-set! o::arithmetic-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-make-procedure-app
(define-inline (make-pre-make-procedure-app::pre-make-procedure-app loc1465::obj type1466::type side-effect?1467::obj key1468::obj fun1469::var args1470::obj owner1471::variable) (instantiate::pre-make-procedure-app (loc loc1465) (type type1466) (side-effect? side-effect?1467) (key key1468) (fun fun1469) (args args1470) (owner owner1471)))
(define-inline (pre-make-procedure-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-procedure-app cfa_info2)))
(define (pre-make-procedure-app-nil::pre-make-procedure-app) (class-nil (@ pre-make-procedure-app cfa_info2)))
(define-inline (pre-make-procedure-app-owner::variable o::pre-make-procedure-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-make-procedure-app-owner-set! o::pre-make-procedure-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-make-procedure-app-args::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-make-procedure-app-args-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-make-procedure-app-fun::var o::pre-make-procedure-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-make-procedure-app-fun-set! o::pre-make-procedure-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-make-procedure-app-key::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-make-procedure-app-key-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-make-procedure-app-side-effect?::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-make-procedure-app-side-effect?-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-make-procedure-app-type::type o::pre-make-procedure-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-make-procedure-app-type-set! o::pre-make-procedure-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-make-procedure-app-loc::obj o::pre-make-procedure-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-make-procedure-app-loc-set! o::pre-make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-procedure-ref-app
(define-inline (make-pre-procedure-ref-app::pre-procedure-ref-app loc1458::obj type1459::type side-effect?1460::obj key1461::obj fun1462::var args1463::obj) (instantiate::pre-procedure-ref-app (loc loc1458) (type type1459) (side-effect? side-effect?1460) (key key1461) (fun fun1462) (args args1463)))
(define-inline (pre-procedure-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-procedure-ref-app cfa_info2)))
(define (pre-procedure-ref-app-nil::pre-procedure-ref-app) (class-nil (@ pre-procedure-ref-app cfa_info2)))
(define-inline (pre-procedure-ref-app-args::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-procedure-ref-app-args-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-procedure-ref-app-fun::var o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-procedure-ref-app-fun-set! o::pre-procedure-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-procedure-ref-app-key::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-procedure-ref-app-key-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-procedure-ref-app-side-effect?::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-procedure-ref-app-side-effect?-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-procedure-ref-app-type::type o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-procedure-ref-app-type-set! o::pre-procedure-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-procedure-ref-app-loc::obj o::pre-procedure-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-procedure-ref-app-loc-set! o::pre-procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-procedure-set!-app
(define-inline (make-pre-procedure-set!-app::pre-procedure-set!-app loc1451::obj type1452::type side-effect?1453::obj key1454::obj fun1455::var args1456::obj) (instantiate::pre-procedure-set!-app (loc loc1451) (type type1452) (side-effect? side-effect?1453) (key key1454) (fun fun1455) (args args1456)))
(define-inline (pre-procedure-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-procedure-set!-app cfa_info2)))
(define (pre-procedure-set!-app-nil::pre-procedure-set!-app) (class-nil (@ pre-procedure-set!-app cfa_info2)))
(define-inline (pre-procedure-set!-app-args::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-procedure-set!-app-args-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-procedure-set!-app-fun::var o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-procedure-set!-app-fun-set! o::pre-procedure-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-procedure-set!-app-key::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-procedure-set!-app-key-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-procedure-set!-app-side-effect?::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-procedure-set!-app-side-effect?-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-procedure-set!-app-type::type o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-procedure-set!-app-type-set! o::pre-procedure-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-procedure-set!-app-loc::obj o::pre-procedure-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-procedure-set!-app-loc-set! o::pre-procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; make-procedure-app
(define-inline (make-make-procedure-app::make-procedure-app loc1436::obj type1437::type side-effect?1438::obj key1439::obj fun1440::var args1441::obj approx1442::approx values-approx1443::vector lost-stamp1444::long X-T?1445::bool X1446::bool T1447::bool owner1448::variable stack-stamp1449::obj) (instantiate::make-procedure-app (loc loc1436) (type type1437) (side-effect? side-effect?1438) (key key1439) (fun fun1440) (args args1441) (approx approx1442) (values-approx values-approx1443) (lost-stamp lost-stamp1444) (X-T? X-T?1445) (X X1446) (T T1447) (owner owner1448) (stack-stamp stack-stamp1449)))
(define-inline (make-procedure-app?::bool obj::obj) ((@ isa? __object) obj (@ make-procedure-app cfa_info2)))
(define (make-procedure-app-nil::make-procedure-app) (class-nil (@ make-procedure-app cfa_info2)))
(define-inline (make-procedure-app-stack-stamp::obj o::make-procedure-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (make-procedure-app-stack-stamp-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (make-procedure-app-owner::variable o::make-procedure-app) (-> |#!bigloo_wallow| o owner))
(define-inline (make-procedure-app-owner-set! o::make-procedure-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (make-procedure-app-T::bool o::make-procedure-app) (-> |#!bigloo_wallow| o T))
(define-inline (make-procedure-app-T-set! o::make-procedure-app v::bool) (set! (-> |#!bigloo_wallow| o T) v))
(define-inline (make-procedure-app-X::bool o::make-procedure-app) (-> |#!bigloo_wallow| o X))
(define-inline (make-procedure-app-X-set! o::make-procedure-app v::bool) (set! (-> |#!bigloo_wallow| o X) v))
(define-inline (make-procedure-app-X-T?::bool o::make-procedure-app) (-> |#!bigloo_wallow| o X-T?))
(define-inline (make-procedure-app-X-T?-set! o::make-procedure-app v::bool) (set! (-> |#!bigloo_wallow| o X-T?) v))
(define-inline (make-procedure-app-lost-stamp::long o::make-procedure-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (make-procedure-app-lost-stamp-set! o::make-procedure-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (make-procedure-app-values-approx::vector o::make-procedure-app) (-> |#!bigloo_wallow| o values-approx))
(define-inline (make-procedure-app-values-approx-set! o::make-procedure-app v::vector) (set! (-> |#!bigloo_wallow| o values-approx) v))
(define-inline (make-procedure-app-approx::approx o::make-procedure-app) (-> |#!bigloo_wallow| o approx))
(define-inline (make-procedure-app-approx-set! o::make-procedure-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (make-procedure-app-args::obj o::make-procedure-app) (-> |#!bigloo_wallow| o args))
(define-inline (make-procedure-app-args-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (make-procedure-app-fun::var o::make-procedure-app) (-> |#!bigloo_wallow| o fun))
(define-inline (make-procedure-app-fun-set! o::make-procedure-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (make-procedure-app-key::obj o::make-procedure-app) (-> |#!bigloo_wallow| o key))
(define-inline (make-procedure-app-key-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (make-procedure-app-side-effect?::obj o::make-procedure-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (make-procedure-app-side-effect?-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (make-procedure-app-type::type o::make-procedure-app) (-> |#!bigloo_wallow| o type))
(define-inline (make-procedure-app-type-set! o::make-procedure-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (make-procedure-app-loc::obj o::make-procedure-app) (-> |#!bigloo_wallow| o loc))
(define-inline (make-procedure-app-loc-set! o::make-procedure-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; procedure-ref-app
(define-inline (make-procedure-ref-app::procedure-ref-app loc1428::obj type1429::type side-effect?1430::obj key1431::obj fun1432::var args1433::obj approx1434::approx) (instantiate::procedure-ref-app (loc loc1428) (type type1429) (side-effect? side-effect?1430) (key key1431) (fun fun1432) (args args1433) (approx approx1434)))
(define-inline (procedure-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ procedure-ref-app cfa_info2)))
(define (procedure-ref-app-nil::procedure-ref-app) (class-nil (@ procedure-ref-app cfa_info2)))
(define-inline (procedure-ref-app-approx::approx o::procedure-ref-app) (-> |#!bigloo_wallow| o approx))
(define-inline (procedure-ref-app-approx-set! o::procedure-ref-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (procedure-ref-app-args::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (procedure-ref-app-args-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (procedure-ref-app-fun::var o::procedure-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (procedure-ref-app-fun-set! o::procedure-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (procedure-ref-app-key::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (procedure-ref-app-key-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (procedure-ref-app-side-effect?::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (procedure-ref-app-side-effect?-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (procedure-ref-app-type::type o::procedure-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (procedure-ref-app-type-set! o::procedure-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (procedure-ref-app-loc::obj o::procedure-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (procedure-ref-app-loc-set! o::procedure-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; procedure-set!-app
(define-inline (make-procedure-set!-app::procedure-set!-app loc1420::obj type1421::type side-effect?1422::obj key1423::obj fun1424::var args1425::obj approx1426::approx) (instantiate::procedure-set!-app (loc loc1420) (type type1421) (side-effect? side-effect?1422) (key key1423) (fun fun1424) (args args1425) (approx approx1426)))
(define-inline (procedure-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ procedure-set!-app cfa_info2)))
(define (procedure-set!-app-nil::procedure-set!-app) (class-nil (@ procedure-set!-app cfa_info2)))
(define-inline (procedure-set!-app-approx::approx o::procedure-set!-app) (-> |#!bigloo_wallow| o approx))
(define-inline (procedure-set!-app-approx-set! o::procedure-set!-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (procedure-set!-app-args::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (procedure-set!-app-args-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (procedure-set!-app-fun::var o::procedure-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (procedure-set!-app-fun-set! o::procedure-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (procedure-set!-app-key::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (procedure-set!-app-key-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (procedure-set!-app-side-effect?::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (procedure-set!-app-side-effect?-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (procedure-set!-app-type::type o::procedure-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (procedure-set!-app-type-set! o::procedure-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (procedure-set!-app-loc::obj o::procedure-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (procedure-set!-app-loc-set! o::procedure-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-make-vector-app
(define-inline (make-pre-make-vector-app::pre-make-vector-app loc1412::obj type1413::type side-effect?1414::obj key1415::obj fun1416::var args1417::obj owner1418::variable) (instantiate::pre-make-vector-app (loc loc1412) (type type1413) (side-effect? side-effect?1414) (key key1415) (fun fun1416) (args args1417) (owner owner1418)))
(define-inline (pre-make-vector-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-vector-app cfa_info2)))
(define (pre-make-vector-app-nil::pre-make-vector-app) (class-nil (@ pre-make-vector-app cfa_info2)))
(define-inline (pre-make-vector-app-owner::variable o::pre-make-vector-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-make-vector-app-owner-set! o::pre-make-vector-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-make-vector-app-args::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-make-vector-app-args-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-make-vector-app-fun::var o::pre-make-vector-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-make-vector-app-fun-set! o::pre-make-vector-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-make-vector-app-key::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-make-vector-app-key-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-make-vector-app-side-effect?::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-make-vector-app-side-effect?-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-make-vector-app-type::type o::pre-make-vector-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-make-vector-app-type-set! o::pre-make-vector-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-make-vector-app-loc::obj o::pre-make-vector-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-make-vector-app-loc-set! o::pre-make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; make-vector-app
(define-inline (make-make-vector-app::make-vector-app loc1399::obj type1400::type side-effect?1401::obj key1402::obj fun1403::var args1404::obj approx1405::approx value-approx1406::approx lost-stamp1407::long owner1408::variable stack-stamp1409::obj seen?1410::bool) (instantiate::make-vector-app (loc loc1399) (type type1400) (side-effect? side-effect?1401) (key key1402) (fun fun1403) (args args1404) (approx approx1405) (value-approx value-approx1406) (lost-stamp lost-stamp1407) (owner owner1408) (stack-stamp stack-stamp1409) (seen? seen?1410)))
(define-inline (make-vector-app?::bool obj::obj) ((@ isa? __object) obj (@ make-vector-app cfa_info2)))
(define (make-vector-app-nil::make-vector-app) (class-nil (@ make-vector-app cfa_info2)))
(define-inline (make-vector-app-seen?::bool o::make-vector-app) (-> |#!bigloo_wallow| o seen?))
(define-inline (make-vector-app-seen?-set! o::make-vector-app v::bool) (set! (-> |#!bigloo_wallow| o seen?) v))
(define-inline (make-vector-app-stack-stamp::obj o::make-vector-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (make-vector-app-stack-stamp-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (make-vector-app-owner::variable o::make-vector-app) (-> |#!bigloo_wallow| o owner))
(define-inline (make-vector-app-owner-set! o::make-vector-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (make-vector-app-lost-stamp::long o::make-vector-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (make-vector-app-lost-stamp-set! o::make-vector-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (make-vector-app-value-approx::approx o::make-vector-app) (-> |#!bigloo_wallow| o value-approx))
(define-inline (make-vector-app-value-approx-set! o::make-vector-app v::approx) (set! (-> |#!bigloo_wallow| o value-approx) v))
(define-inline (make-vector-app-approx::approx o::make-vector-app) (-> |#!bigloo_wallow| o approx))
(define-inline (make-vector-app-approx-set! o::make-vector-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (make-vector-app-args::obj o::make-vector-app) (-> |#!bigloo_wallow| o args))
(define-inline (make-vector-app-args-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (make-vector-app-fun::var o::make-vector-app) (-> |#!bigloo_wallow| o fun))
(define-inline (make-vector-app-fun-set! o::make-vector-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (make-vector-app-key::obj o::make-vector-app) (-> |#!bigloo_wallow| o key))
(define-inline (make-vector-app-key-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (make-vector-app-side-effect?::obj o::make-vector-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (make-vector-app-side-effect?-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (make-vector-app-type::type o::make-vector-app) (-> |#!bigloo_wallow| o type))
(define-inline (make-vector-app-type-set! o::make-vector-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (make-vector-app-loc::obj o::make-vector-app) (-> |#!bigloo_wallow| o loc))
(define-inline (make-vector-app-loc-set! o::make-vector-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-make-struct-app
(define-inline (make-pre-make-struct-app::pre-make-struct-app loc1391::obj type1392::type side-effect?1393::obj key1394::obj fun1395::var args1396::obj owner1397::variable) (instantiate::pre-make-struct-app (loc loc1391) (type type1392) (side-effect? side-effect?1393) (key key1394) (fun fun1395) (args args1396) (owner owner1397)))
(define-inline (pre-make-struct-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-make-struct-app cfa_info2)))
(define (pre-make-struct-app-nil::pre-make-struct-app) (class-nil (@ pre-make-struct-app cfa_info2)))
(define-inline (pre-make-struct-app-owner::variable o::pre-make-struct-app) (-> |#!bigloo_wallow| o owner))
(define-inline (pre-make-struct-app-owner-set! o::pre-make-struct-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (pre-make-struct-app-args::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-make-struct-app-args-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-make-struct-app-fun::var o::pre-make-struct-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-make-struct-app-fun-set! o::pre-make-struct-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-make-struct-app-key::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-make-struct-app-key-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-make-struct-app-side-effect?::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-make-struct-app-side-effect?-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-make-struct-app-type::type o::pre-make-struct-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-make-struct-app-type-set! o::pre-make-struct-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-make-struct-app-loc::obj o::pre-make-struct-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-make-struct-app-loc-set! o::pre-make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-struct-ref-app
(define-inline (make-pre-struct-ref-app::pre-struct-ref-app loc1384::obj type1385::type side-effect?1386::obj key1387::obj fun1388::var args1389::obj) (instantiate::pre-struct-ref-app (loc loc1384) (type type1385) (side-effect? side-effect?1386) (key key1387) (fun fun1388) (args args1389)))
(define-inline (pre-struct-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-struct-ref-app cfa_info2)))
(define (pre-struct-ref-app-nil::pre-struct-ref-app) (class-nil (@ pre-struct-ref-app cfa_info2)))
(define-inline (pre-struct-ref-app-args::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-struct-ref-app-args-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-struct-ref-app-fun::var o::pre-struct-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-struct-ref-app-fun-set! o::pre-struct-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-struct-ref-app-key::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-struct-ref-app-key-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-struct-ref-app-side-effect?::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-struct-ref-app-side-effect?-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-struct-ref-app-type::type o::pre-struct-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-struct-ref-app-type-set! o::pre-struct-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-struct-ref-app-loc::obj o::pre-struct-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-struct-ref-app-loc-set! o::pre-struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; pre-struct-set!-app
(define-inline (make-pre-struct-set!-app::pre-struct-set!-app loc1377::obj type1378::type side-effect?1379::obj key1380::obj fun1381::var args1382::obj) (instantiate::pre-struct-set!-app (loc loc1377) (type type1378) (side-effect? side-effect?1379) (key key1380) (fun fun1381) (args args1382)))
(define-inline (pre-struct-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ pre-struct-set!-app cfa_info2)))
(define (pre-struct-set!-app-nil::pre-struct-set!-app) (class-nil (@ pre-struct-set!-app cfa_info2)))
(define-inline (pre-struct-set!-app-args::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (pre-struct-set!-app-args-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (pre-struct-set!-app-fun::var o::pre-struct-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (pre-struct-set!-app-fun-set! o::pre-struct-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (pre-struct-set!-app-key::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (pre-struct-set!-app-key-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (pre-struct-set!-app-side-effect?::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (pre-struct-set!-app-side-effect?-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (pre-struct-set!-app-type::type o::pre-struct-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (pre-struct-set!-app-type-set! o::pre-struct-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (pre-struct-set!-app-loc::obj o::pre-struct-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (pre-struct-set!-app-loc-set! o::pre-struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; make-struct-app
(define-inline (make-make-struct-app::make-struct-app loc1365::obj type1366::type side-effect?1367::obj key1368::obj fun1369::var args1370::obj approx1371::approx value-approx1372::approx lost-stamp1373::long owner1374::variable stack-stamp1375::obj) (instantiate::make-struct-app (loc loc1365) (type type1366) (side-effect? side-effect?1367) (key key1368) (fun fun1369) (args args1370) (approx approx1371) (value-approx value-approx1372) (lost-stamp lost-stamp1373) (owner owner1374) (stack-stamp stack-stamp1375)))
(define-inline (make-struct-app?::bool obj::obj) ((@ isa? __object) obj (@ make-struct-app cfa_info2)))
(define (make-struct-app-nil::make-struct-app) (class-nil (@ make-struct-app cfa_info2)))
(define-inline (make-struct-app-stack-stamp::obj o::make-struct-app) (-> |#!bigloo_wallow| o stack-stamp))
(define-inline (make-struct-app-stack-stamp-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o stack-stamp) v))
(define-inline (make-struct-app-owner::variable o::make-struct-app) (-> |#!bigloo_wallow| o owner))
(define-inline (make-struct-app-owner-set! o::make-struct-app v::variable) (set! (-> |#!bigloo_wallow| o owner) v))
(define-inline (make-struct-app-lost-stamp::long o::make-struct-app) (-> |#!bigloo_wallow| o lost-stamp))
(define-inline (make-struct-app-lost-stamp-set! o::make-struct-app v::long) (set! (-> |#!bigloo_wallow| o lost-stamp) v))
(define-inline (make-struct-app-value-approx::approx o::make-struct-app) (-> |#!bigloo_wallow| o value-approx))
(define-inline (make-struct-app-value-approx-set! o::make-struct-app v::approx) (set! (-> |#!bigloo_wallow| o value-approx) v))
(define-inline (make-struct-app-approx::approx o::make-struct-app) (-> |#!bigloo_wallow| o approx))
(define-inline (make-struct-app-approx-set! o::make-struct-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (make-struct-app-args::obj o::make-struct-app) (-> |#!bigloo_wallow| o args))
(define-inline (make-struct-app-args-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (make-struct-app-fun::var o::make-struct-app) (-> |#!bigloo_wallow| o fun))
(define-inline (make-struct-app-fun-set! o::make-struct-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (make-struct-app-key::obj o::make-struct-app) (-> |#!bigloo_wallow| o key))
(define-inline (make-struct-app-key-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (make-struct-app-side-effect?::obj o::make-struct-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (make-struct-app-side-effect?-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (make-struct-app-type::type o::make-struct-app) (-> |#!bigloo_wallow| o type))
(define-inline (make-struct-app-type-set! o::make-struct-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (make-struct-app-loc::obj o::make-struct-app) (-> |#!bigloo_wallow| o loc))
(define-inline (make-struct-app-loc-set! o::make-struct-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; struct-ref-app
(define-inline (make-struct-ref-app::struct-ref-app loc1357::obj type1358::type side-effect?1359::obj key1360::obj fun1361::var args1362::obj approx1363::approx) (instantiate::struct-ref-app (loc loc1357) (type type1358) (side-effect? side-effect?1359) (key key1360) (fun fun1361) (args args1362) (approx approx1363)))
(define-inline (struct-ref-app?::bool obj::obj) ((@ isa? __object) obj (@ struct-ref-app cfa_info2)))
(define (struct-ref-app-nil::struct-ref-app) (class-nil (@ struct-ref-app cfa_info2)))
(define-inline (struct-ref-app-approx::approx o::struct-ref-app) (-> |#!bigloo_wallow| o approx))
(define-inline (struct-ref-app-approx-set! o::struct-ref-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (struct-ref-app-args::obj o::struct-ref-app) (-> |#!bigloo_wallow| o args))
(define-inline (struct-ref-app-args-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (struct-ref-app-fun::var o::struct-ref-app) (-> |#!bigloo_wallow| o fun))
(define-inline (struct-ref-app-fun-set! o::struct-ref-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (struct-ref-app-key::obj o::struct-ref-app) (-> |#!bigloo_wallow| o key))
(define-inline (struct-ref-app-key-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (struct-ref-app-side-effect?::obj o::struct-ref-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (struct-ref-app-side-effect?-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (struct-ref-app-type::type o::struct-ref-app) (-> |#!bigloo_wallow| o type))
(define-inline (struct-ref-app-type-set! o::struct-ref-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (struct-ref-app-loc::obj o::struct-ref-app) (-> |#!bigloo_wallow| o loc))
(define-inline (struct-ref-app-loc-set! o::struct-ref-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))

;; struct-set!-app
(define-inline (make-struct-set!-app::struct-set!-app loc1349::obj type1350::type side-effect?1351::obj key1352::obj fun1353::var args1354::obj approx1355::approx) (instantiate::struct-set!-app (loc loc1349) (type type1350) (side-effect? side-effect?1351) (key key1352) (fun fun1353) (args args1354) (approx approx1355)))
(define-inline (struct-set!-app?::bool obj::obj) ((@ isa? __object) obj (@ struct-set!-app cfa_info2)))
(define (struct-set!-app-nil::struct-set!-app) (class-nil (@ struct-set!-app cfa_info2)))
(define-inline (struct-set!-app-approx::approx o::struct-set!-app) (-> |#!bigloo_wallow| o approx))
(define-inline (struct-set!-app-approx-set! o::struct-set!-app v::approx) (set! (-> |#!bigloo_wallow| o approx) v))
(define-inline (struct-set!-app-args::obj o::struct-set!-app) (-> |#!bigloo_wallow| o args))
(define-inline (struct-set!-app-args-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o args) v))
(define-inline (struct-set!-app-fun::var o::struct-set!-app) (-> |#!bigloo_wallow| o fun))
(define-inline (struct-set!-app-fun-set! o::struct-set!-app v::var) (set! (-> |#!bigloo_wallow| o fun) v))
(define-inline (struct-set!-app-key::obj o::struct-set!-app) (-> |#!bigloo_wallow| o key))
(define-inline (struct-set!-app-key-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o key) v))
(define-inline (struct-set!-app-side-effect?::obj o::struct-set!-app) (-> |#!bigloo_wallow| o side-effect?))
(define-inline (struct-set!-app-side-effect?-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o side-effect?) v))
(define-inline (struct-set!-app-type::type o::struct-set!-app) (-> |#!bigloo_wallow| o type))
(define-inline (struct-set!-app-type-set! o::struct-set!-app v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (struct-set!-app-loc::obj o::struct-set!-app) (-> |#!bigloo_wallow| o loc))
(define-inline (struct-set!-app-loc-set! o::struct-set!-app v::obj) (set! (-> |#!bigloo_wallow| o loc) v))
))
